// Code generated by protoc-gen-go. DO NOT EDIT.
// source: events.proto

package events

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ErrorCode int32

const (
	ErrorCode_OK    ErrorCode = 0
	ErrorCode_ERROR ErrorCode = 1
)

var ErrorCode_name = map[int32]string{
	0: "OK",
	1: "ERROR",
}

var ErrorCode_value = map[string]int32{
	"OK":    0,
	"ERROR": 1,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}

func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8f22242cb04491f9, []int{0}
}

type Event struct {
	Uuid                 string               `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Heading              string               `protobuf:"bytes,2,opt,name=heading,proto3" json:"heading,omitempty"`
	DateTime             *timestamp.Timestamp `protobuf:"bytes,3,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	Duration             *duration.Duration   `protobuf:"bytes,4,opt,name=duration,proto3" json:"duration,omitempty"`
	Description          string               `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Owner                string               `protobuf:"bytes,6,opt,name=owner,proto3" json:"owner,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f22242cb04491f9, []int{0}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Event) GetHeading() string {
	if m != nil {
		return m.Heading
	}
	return ""
}

func (m *Event) GetDateTime() *timestamp.Timestamp {
	if m != nil {
		return m.DateTime
	}
	return nil
}

func (m *Event) GetDuration() *duration.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *Event) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type Response struct {
	Error                ErrorCode `protobuf:"varint,1,opt,name=error,proto3,enum=ErrorCode" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f22242cb04491f9, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetError() ErrorCode {
	if m != nil {
		return m.Error
	}
	return ErrorCode_OK
}

type EventsResponse struct {
	Error                ErrorCode `protobuf:"varint,1,opt,name=error,proto3,enum=ErrorCode" json:"error,omitempty"`
	Events               []*Event  `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *EventsResponse) Reset()         { *m = EventsResponse{} }
func (m *EventsResponse) String() string { return proto.CompactTextString(m) }
func (*EventsResponse) ProtoMessage()    {}
func (*EventsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f22242cb04491f9, []int{2}
}

func (m *EventsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventsResponse.Unmarshal(m, b)
}
func (m *EventsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventsResponse.Marshal(b, m, deterministic)
}
func (m *EventsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventsResponse.Merge(m, src)
}
func (m *EventsResponse) XXX_Size() int {
	return xxx_messageInfo_EventsResponse.Size(m)
}
func (m *EventsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EventsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EventsResponse proto.InternalMessageInfo

func (m *EventsResponse) GetError() ErrorCode {
	if m != nil {
		return m.Error
	}
	return ErrorCode_OK
}

func (m *EventsResponse) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type CreateRequest struct {
	Event                *Event   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f22242cb04491f9, []int{3}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type UpdateRequest struct {
	//string uuid = 1; I don't understand why
	Event                *Event   `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f22242cb04491f9, []int{4}
}

func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(m, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type RemoveRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveRequest) Reset()         { *m = RemoveRequest{} }
func (m *RemoveRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveRequest) ProtoMessage()    {}
func (*RemoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f22242cb04491f9, []int{5}
}

func (m *RemoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveRequest.Unmarshal(m, b)
}
func (m *RemoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveRequest.Marshal(b, m, deterministic)
}
func (m *RemoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveRequest.Merge(m, src)
}
func (m *RemoveRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveRequest.Size(m)
}
func (m *RemoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveRequest proto.InternalMessageInfo

func (m *RemoveRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type DataRequest struct {
	DateTime             *timestamp.Timestamp `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DataRequest) Reset()         { *m = DataRequest{} }
func (m *DataRequest) String() string { return proto.CompactTextString(m) }
func (*DataRequest) ProtoMessage()    {}
func (*DataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f22242cb04491f9, []int{6}
}

func (m *DataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataRequest.Unmarshal(m, b)
}
func (m *DataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataRequest.Marshal(b, m, deterministic)
}
func (m *DataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataRequest.Merge(m, src)
}
func (m *DataRequest) XXX_Size() int {
	return xxx_messageInfo_DataRequest.Size(m)
}
func (m *DataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DataRequest proto.InternalMessageInfo

func (m *DataRequest) GetDateTime() *timestamp.Timestamp {
	if m != nil {
		return m.DateTime
	}
	return nil
}

func init() {
	proto.RegisterEnum("ErrorCode", ErrorCode_name, ErrorCode_value)
	proto.RegisterType((*Event)(nil), "Event")
	proto.RegisterType((*Response)(nil), "Response")
	proto.RegisterType((*EventsResponse)(nil), "EventsResponse")
	proto.RegisterType((*CreateRequest)(nil), "CreateRequest")
	proto.RegisterType((*UpdateRequest)(nil), "UpdateRequest")
	proto.RegisterType((*RemoveRequest)(nil), "RemoveRequest")
	proto.RegisterType((*DataRequest)(nil), "DataRequest")
}

func init() { proto.RegisterFile("events.proto", fileDescriptor_8f22242cb04491f9) }

var fileDescriptor_8f22242cb04491f9 = []byte{
	// 438 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xb1, 0x1b, 0xbb, 0xf6, 0xa4, 0x75, 0xa3, 0x11, 0x07, 0x13, 0xa1, 0x60, 0x39, 0x97,
	0x08, 0xc1, 0x06, 0x82, 0x10, 0x0f, 0x90, 0x04, 0x24, 0xfe, 0xa8, 0x68, 0x05, 0xe2, 0x88, 0x5c,
	0x3c, 0xa4, 0x16, 0x8d, 0xd7, 0xec, 0xae, 0x8b, 0x78, 0x06, 0x1e, 0x93, 0x17, 0x41, 0xde, 0x8d,
	0x43, 0x1c, 0x72, 0x08, 0xb7, 0x9d, 0x99, 0xdf, 0xb7, 0x33, 0xdf, 0x0c, 0x9c, 0xd1, 0x2d, 0x95,
	0x5a, 0xb1, 0x4a, 0x0a, 0x2d, 0x86, 0x0f, 0x56, 0x42, 0xac, 0x6e, 0x68, 0x6a, 0xa2, 0xab, 0xfa,
	0xeb, 0x54, 0x17, 0x6b, 0x52, 0x3a, 0x5b, 0x57, 0x1b, 0x60, 0xb4, 0x0f, 0xe4, 0xb5, 0xcc, 0x74,
	0x21, 0x4a, 0x5b, 0x4f, 0x7f, 0x3b, 0xe0, 0x2d, 0x9b, 0x1f, 0x11, 0xa1, 0x57, 0xd7, 0x45, 0x1e,
	0x3b, 0x89, 0x33, 0x09, 0xb9, 0x79, 0x63, 0x0c, 0xa7, 0xd7, 0x94, 0xe5, 0x45, 0xb9, 0x8a, 0x5d,
	0x93, 0x6e, 0x43, 0x7c, 0x01, 0x61, 0x9e, 0x69, 0xfa, 0xdc, 0xf4, 0x8b, 0x4f, 0x12, 0x67, 0xd2,
	0x9f, 0x0d, 0x99, 0xed, 0xc5, 0xda, 0x5e, 0xec, 0x43, 0x3b, 0x0c, 0x0f, 0x1a, 0xb8, 0x09, 0xf1,
	0x39, 0x04, 0xed, 0x08, 0x71, 0xcf, 0xe8, 0xee, 0xfd, 0xa3, 0x5b, 0x6c, 0x00, 0xbe, 0x45, 0x31,
	0x81, 0x7e, 0x4e, 0xea, 0x8b, 0x2c, 0x2a, 0xa3, 0xf4, 0xcc, 0x34, 0xbb, 0x29, 0xbc, 0x0b, 0x9e,
	0xf8, 0x51, 0x92, 0x8c, 0x7d, 0x53, 0xb3, 0xc1, 0xeb, 0x5e, 0x70, 0x3a, 0x08, 0xd2, 0x47, 0x10,
	0x70, 0x52, 0x95, 0x28, 0x15, 0x61, 0x02, 0x1e, 0x49, 0x29, 0xa4, 0x31, 0x1a, 0xcd, 0x80, 0x2d,
	0x9b, 0x68, 0x2e, 0x72, 0xe2, 0xb6, 0x90, 0x72, 0x88, 0xcc, 0x4a, 0xd4, 0xf1, 0x1a, 0x1c, 0x81,
	0x6f, 0x0f, 0x13, 0xbb, 0xc9, 0xc9, 0xa4, 0x3f, 0xf3, 0x99, 0xf9, 0x82, 0x6f, 0xb2, 0xe9, 0x63,
	0x38, 0x9f, 0x4b, 0xca, 0x34, 0x71, 0xfa, 0x5e, 0x93, 0xd2, 0x78, 0x1f, 0x3c, 0x53, 0x32, 0x5f,
	0xfe, 0xe5, 0x6d, 0xb2, 0xc1, 0x3f, 0x56, 0xf9, 0x21, 0xdc, 0x3d, 0x84, 0x8f, 0xe1, 0x9c, 0xd3,
	0x5a, 0xdc, 0x6e, 0xf1, 0x03, 0xc7, 0x4c, 0x5f, 0x42, 0x7f, 0x91, 0xe9, 0xac, 0x45, 0x3a, 0x17,
	0x74, 0x8e, 0xbf, 0xe0, 0xc3, 0x11, 0x84, 0x5b, 0xfb, 0xe8, 0x83, 0x7b, 0xf9, 0x66, 0x70, 0x07,
	0x43, 0xf0, 0x96, 0x9c, 0x5f, 0xf2, 0x81, 0x33, 0xfb, 0xe5, 0x42, 0xef, 0x15, 0x7f, 0x3f, 0xc7,
	0x31, 0xf8, 0xd6, 0x33, 0x46, 0xac, 0x63, 0x7e, 0x18, 0xb2, 0xed, 0x6a, 0xc7, 0xe0, 0x5b, 0xa7,
	0x18, 0xb1, 0x8e, 0xe5, 0x3d, 0xc8, 0xfa, 0xc3, 0x88, 0x75, 0x8c, 0xee, 0x42, 0x53, 0x88, 0x16,
	0x59, 0x71, 0xf3, 0xd3, 0x6c, 0xe6, 0x6d, 0xa1, 0x34, 0x9e, 0xb1, 0x1d, 0xc3, 0xc3, 0x0b, 0xb6,
	0x77, 0xd5, 0x27, 0x70, 0xf1, 0x89, 0xe8, 0xdb, 0x7f, 0x28, 0x9e, 0xc2, 0xe0, 0x9d, 0x28, 0xf5,
	0xf5, 0xf1, 0x92, 0x2b, 0xdf, 0xec, 0xf2, 0xd9, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4e, 0xd7,
	0x7b, 0x94, 0xb8, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GRPCClient is the client API for GRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GRPCClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*Response, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*Response, error)
	Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*Response, error)
	DailyEventList(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*EventsResponse, error)
	WeeklyEventList(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*EventsResponse, error)
	MonthlyEventList(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*EventsResponse, error)
}

type gRPCClient struct {
	cc grpc.ClientConnInterface
}

func NewGRPCClient(cc grpc.ClientConnInterface) GRPCClient {
	return &gRPCClient{cc}
}

func (c *gRPCClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/GRPC/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/GRPC/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCClient) Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/GRPC/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCClient) DailyEventList(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*EventsResponse, error) {
	out := new(EventsResponse)
	err := c.cc.Invoke(ctx, "/GRPC/DailyEventList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCClient) WeeklyEventList(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*EventsResponse, error) {
	out := new(EventsResponse)
	err := c.cc.Invoke(ctx, "/GRPC/WeeklyEventList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCClient) MonthlyEventList(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*EventsResponse, error) {
	out := new(EventsResponse)
	err := c.cc.Invoke(ctx, "/GRPC/MonthlyEventList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GRPCServer is the server API for GRPC service.
type GRPCServer interface {
	Create(context.Context, *CreateRequest) (*Response, error)
	Update(context.Context, *UpdateRequest) (*Response, error)
	Remove(context.Context, *RemoveRequest) (*Response, error)
	DailyEventList(context.Context, *DataRequest) (*EventsResponse, error)
	WeeklyEventList(context.Context, *DataRequest) (*EventsResponse, error)
	MonthlyEventList(context.Context, *DataRequest) (*EventsResponse, error)
}

// UnimplementedGRPCServer can be embedded to have forward compatible implementations.
type UnimplementedGRPCServer struct {
}

func (*UnimplementedGRPCServer) Create(ctx context.Context, req *CreateRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedGRPCServer) Update(ctx context.Context, req *UpdateRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedGRPCServer) Remove(ctx context.Context, req *RemoveRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Remove not implemented")
}
func (*UnimplementedGRPCServer) DailyEventList(ctx context.Context, req *DataRequest) (*EventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DailyEventList not implemented")
}
func (*UnimplementedGRPCServer) WeeklyEventList(ctx context.Context, req *DataRequest) (*EventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WeeklyEventList not implemented")
}
func (*UnimplementedGRPCServer) MonthlyEventList(ctx context.Context, req *DataRequest) (*EventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MonthlyEventList not implemented")
}

func RegisterGRPCServer(s *grpc.Server, srv GRPCServer) {
	s.RegisterService(&_GRPC_serviceDesc, srv)
}

func _GRPC_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GRPC/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPC_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GRPC/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPC_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GRPC/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCServer).Remove(ctx, req.(*RemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPC_DailyEventList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCServer).DailyEventList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GRPC/DailyEventList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCServer).DailyEventList(ctx, req.(*DataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPC_WeeklyEventList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCServer).WeeklyEventList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GRPC/WeeklyEventList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCServer).WeeklyEventList(ctx, req.(*DataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPC_MonthlyEventList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCServer).MonthlyEventList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GRPC/MonthlyEventList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCServer).MonthlyEventList(ctx, req.(*DataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GRPC",
	HandlerType: (*GRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _GRPC_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _GRPC_Update_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _GRPC_Remove_Handler,
		},
		{
			MethodName: "DailyEventList",
			Handler:    _GRPC_DailyEventList_Handler,
		},
		{
			MethodName: "WeeklyEventList",
			Handler:    _GRPC_WeeklyEventList_Handler,
		},
		{
			MethodName: "MonthlyEventList",
			Handler:    _GRPC_MonthlyEventList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "events.proto",
}
